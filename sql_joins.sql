#1 List the number of films per category.
SELECT
C.name as category_name,
count(FC.film_id) as n_films
FROM category C
LEFT JOIN film_category FC ON C.category_id=FC.category_id
GROUP BY category_name;

#2 Retrieve the store ID, city, and country for each store.
SELECT
S.store_id,
C.city,
CC.country
FROM store S
LEFT JOIN address A ON A.address_id=S.address_id
JOIN city C ON A.city_id=C.city_id
JOIN country CC on CC.country_id=C.country_id;

#3 Calculate the total revenue generated by each store in dollars.
SELECT 
S.store_id,
sum(amount) as revenue
FROM store S
LEFT JOIN customer C ON c.store_id=S.store_id
LEFT JOIN payment P ON p.customer_id=c.customer_id
GROUP BY S.store_id;

#4 Determine the average running time of films for each category.
SELECT
C.name as category_name,
AVG(F.length) as avg_duration
FROM category C
LEFT JOIN film_category FC ON C.category_id=FC.category_id
LEFT JOIN film F ON F.film_id=FC.film_id
GROUP BY category_name;

#5 Identify the film categories with the longest average running time.
SELECT
C.name as category_name,
AVG(F.length) as avg_duration
FROM category C
LEFT JOIN film_category FC ON C.category_id=FC.category_id
LEFT JOIN film F ON F.film_id=FC.film_id
GROUP BY category_name
ORDER BY avg_duration desc
LIMIT 1;

#6 Display the top 10 most frequently rented movies in descending order.
SELECT 
f.title,
count(r.rental_id) as n_rentals
FROM film F
LEFT JOIN inventory I ON I.film_id=f.film_id
LEFT JOIN rental R ON I.inventory_id=r.inventory_id
GROUP BY f.title
ORDER BY count(r.rental_id) DESC
LIMIT 10;

#7 Determine if "Academy Dinosaur" can be rented from Store 1.
SELECT
f.title, I.inventory_id
FROM film F
LEFT JOIN inventory I ON I.film_id=f.film_id
LEFT JOIN store S ON s.store_id=I.store_id
WHERE F.title="Academy Dinosaur" AND s.store_id=1;


#8 Provide a list of all distinct film titles, along with their availability status in the inventory. 
#Include a column indicating whether each title is 'Available' or 'NOT available.' 
SELECT 
DISTINCT title,
CASE WHEN ISNULL(I.film_id)=True THEN "Not Available" ELSE "Available" END AS availability
FROM film F
LEFT JOIN inventory I ON I.film_id=F.film_id;